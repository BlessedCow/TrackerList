function formatSheet() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

  // Step 1: Format column E to mm/dd/yyyy
  sheet.getRange("E:E").setNumberFormat("mm/dd/yyyy");

  // Step 2: Reset any existing highlighting or background
  sheet.getDataRange().setBackground(null).setFontColor("#000000");

  // Step 3: Sort the sheet by email, name, and date
  sheet.getRange("A2:E").sort([{column: 2, ascending: true}, {column: 3, ascending: true}, {column: 5, ascending: true}]);

  // Step 4: Remove duplicates
  sheet.getDataRange().removeDuplicates([2, 3, 5]);

  // Step 5: Create separate arrays for each color
  var range = sheet.getDataRange();
  var values = range.getValues();
  var colorsData = {"#F0E8B9": [], "#DEB48B": [], "#DC9632": [], "#F3A15C": [], "#F3835C": []};
  for (var i = 1; i < values.length; i++) {
    var row = values[i];
    var date = new Date(row[4]);
    var day = date.getDate();
    var color = null;
    if (day >= 1 && day <= 7) {
      color = "#F0E8B9";
    } else if (day >= 8 && day <= 14) {
      color = "#DEB48B";
    } else if (day >= 15 && day <= 21) {
      color = "#DC9632";
    } else if (day >= 22 && day <= 28) {
      color = "#F3A15C";
    } else if (day >= 29 && day <= 31) {
      color = "#F3835C";
    }
    if (color) {
      colorsData[color].push(row);
    }
  }

  // Step 6: Sort each array separately
  for (var color in colorsData) {
    colorsData[color].sort(function(a, b) {
      if (a[1] != b[1]) { // sort by email
        return a[1] > b[1] ? 1 : -1;
      } else if (a[2] != b[2]) { // sort by name
        return a[2] > b[2] ? 1 : -1;
      } else { // sort by date
        return new Date(a[4]) > new Date(b[4]) ? 1 : -1;
      }
    });
  }

  // Step 7: Concatenate the arrays back together in the desired order
  var sortedData = [];
  var colors = ["#F0E8B9", "#DEB48B", "#DC9632", "#F3A15C", "#F3835C"];
  for (var i = 0; i < colors.length; i++) {
    sortedData = sortedData.concat(colorsData[colors[i]]);
  }

  // Step 8: Clear the sheet and write the sorted data back to it
  sheet.clearContents();
  sheet.getRange(1,1,1,range.getNumColumns()).setValues([range.offset(0,0,1,range.getNumColumns()).getValues()[0]]);
  sheet.getRange(2,1,sortedData.length,sortedData[0].length).setValues(sortedData);

  // Step 9: Highlight rows based on day of month
  for (var i = 1; i < sortedData.length; i++) {
    var row = sortedData[i];
    var date = new Date(row[4]);
    var day = date.getDate();
    var color = null;
    if (day >= 1 && day <= 7) {
      color = "#F0E8B9";
    } else if (day >= 8 && day <= 14) {
      color = "#DEB48B";
    } else if (day >= 15 && day <= 21) {
      color = "#DC9632";
    } else if (day >= 22 && day <= 28) {
      color = "#F3A15C";
    } else if (day >= 29 && day <= 31) {
      color = "#F3835C";
    }
    if (color) {
      sheet.getRange(i+1, 1, 1, range.getNumColumns()).setBackground(color).setFontColor("#000000");
    }
  }
}
